html {
  font-size: 62.5%; /* Set base font size to 10px */
}

/***** BEGIN ROOT VARIABLES *****/

:root {
	
/*** COLOR SYSTEM ***/
	
/* 
GLOBAL COLOR SETUP (HSL)
Set the global colors below using HSL variables.
*/
	
	--primary-h: 44;
	--primary-s: 98%;
	--primary-l: 50%;

	--secondary-h: 41.1;
	--secondary-s: 100%;
	--secondary-l: 63.3%;

	--accent-h: 54.5;
	--accent-s: 15.5%;
	--accent-l: 86.1%;

	--base-h: 357.2;
	--base-s: 70.5%;
	--base-l: 47.8%;

/* 
SHADING VARIABLES
If you want to adjust the generated shade variants, you can adjust the percentages here.
Higher percentages are lighter and lower are darker.
*/

	--ultra-light: 95%;
	--light: 85%;
	--dark: 25%;
	--ultra-dark: 10%;

/* 
GLOBAL COLOR VARIABLES
These are the variables you can use in styling. They don't need to be edited.
Future plans: Auto generate full complimentary, triadic, analogous, etc. color schemes.
*/

	--primary: hsl(var(--primary-h), var(--primary-s), var(--primary-l));
	--primary-ultra-light: hsl(var(--primary-h), var(--primary-s), var(--ultra-light));
	--primary-light: hsl(var(--primary-h), var(--primary-s), var(--light));
	--primary-dark: hsl(var(--primary-h), var(--primary-s), var(--dark));
	--primary-ultra-dark: hsl(var(--primary-h), var(--primary-s), var(--ultra-dark));
	--primary-trans-80: hsla(var(--primary-h), var(--primary-s), var(--primary-l), .8);
	--primary-trans-60: hsla(var(--primary-h), var(--primary-s), var(--primary-l), .6);
	--primary-trans-40: hsla(var(--primary-h), var(--primary-s), var(--primary-l), .4);
	--primary-trans-20: hsla(var(--primary-h), var(--primary-s), var(--primary-l), .2);
	--primary-comp: hsl(calc(var(--primary-h) + 180), var(--primary-s), var(--primary-l));
	--secondary: hsl(var(--secondary-h), var(--secondary-s), var(--secondary-l));
	--secondary-ultra-light: hsl(var(--secondary-h), var(--secondary-s), var(--ultra-light));
	--secondary-light: hsl(var(--secondary-h), var(--secondary-s), var(--light));
	--secondary-dark: hsl(var(--secondary-h), var(--secondary-s), var(--dark));
	--secondary-ultra-dark: hsl(var(--secondary-h), var(--secondary-s), var(--ultra-dark));
	--secondary-trans-80: hsla(var(--secondary-h), var(--secondary-s), var(--secondary-l), .8);
	--secondary-trans-60: hsla(var(--secondary-h), var(--secondary-s), var(--secondary-l), .6);
	--secondary-trans-40: hsla(var(--secondary-h), var(--secondary-s), var(--secondary-l), .4);
	--secondary-trans-20: hsla(var(--secondary-h), var(--secondary-s), var(--secondary-l), .2);
	--secondary-comp: hsl(calc(var(--secondary-h) + 180), var(--secondary-s), var(--secondary-l));
	--accent: hsl(var(--accent-h), var(--accent-s), var(--accent-l));
	--accent-ultra-light: hsl(var(--accent-h), var(--accent-s), var(--ultra-light));
	--accent-light: hsl(var(--accent-h), var(--accent-s), var(--light));
	--accent-dark: hsl(var(--accent-h), var(--accent-s), var(--dark));
	--accent-ultra-dark: hsl(var(--accent-h), var(--accent-s), var(--ultra-dark));
	--accent-trans-80: hsla(var(--accent-h), var(--accent-s), var(--accent-l), .8);
	--accent-trans-60: hsla(var(--accent-h), var(--accent-s), var(--accent-l), .6);
	--accent-trans-40: hsla(var(--accent-h), var(--accent-s), var(--accent-l), .4);
	--accent-trans-20: hsla(var(--accent-h), var(--accent-s), var(--accent-l), .2);
	--accent-comp: hsl(calc(var(--accent-h) + 180), var(--accent-s), var(--accent-l));
	--base: hsl(var(--base-h), var(--base-s), var(--base-l));
	--base-ultra-light: hsl(var(--base-h), var(--base-s), var(--ultra-light));
	--base-light: hsl(var(--base-h), var(--base-s), var(--light));
	--base-dark: hsl(var(--base-h), var(--base-s), var(--dark));
	--base-ultra-dark: hsl(var(--base-h), var(--base-s), var(--ultra-dark));
	--base-trans-80: hsla(var(--base-h), var(--base-s), var(--base-l), .8);
	--base-trans-60: hsla(var(--base-h), var(--base-s), var(--base-l), .6);
	--base-trans-40: hsla(var(--base-h), var(--base-s), var(--base-l), .4);
	--base-trans-20: hsla(var(--base-h), var(--base-s), var(--base-l), .2);
	--base-comp: hsl(calc(var(--base-h) + 180), var(--base-s), var(--base-l));
	
/*** END COLOR SYSTEM ***/
	
/***
CLAMP SYSTEM
These fill the necessary min/max viewport variables in the clamp functions used throughout the system.
If you want to base the clamp functions off different viewport variables, you can change them here.
***/
	
	--vp-min: 32; /* Viewport Min Size in REM */
	--vp-max: 112; /* Viewport Max Size in REM */
		
/*** 
FLUID TEXT SIZE SYSTEM 
Base text sizes are used to calculate the fluid text and heading styles. Adjust accordingly.
***/
	
	--base-text-mobile: 1.6;
	--base-text-desktop: 1.8;
	--text-adjust-mob-xs: .2; 
	--text-adjust-mob-m: 1; 
	--text-adjust-mob-l: 1.2; 
	--text-adjust-mob-xl: 1.2; 
	--text-adjust-mob-xxl: 1.4;
	--text-adjust-desk-l: 1.2;
	--text-adjust-desk-xl: 1.6;
	--text-adjust-desk-xxl: 1.8;
	
/*** 
FLUID SPACING SYSTEM 
Base spacing is used to calculate margin and padding styles. Adjust accordingly.
The adjustment variables are multipliers of the base size.
***/
	
	--base-space: 3;
	--space-adjust-mob-xs: .6; 
	--space-adjust-mob-s: .8; 
	--space-adjust-mob-m: 1; 
	--space-adjust-mob-l: 1.2; 
	--space-adjust-mob-xl: 1.4; 
	--space-adjust-mob-xxl: 1.8;
	--space-adjust-desk-l: 1.2;
	--space-adjust-desk-xl: 1.4;
	--space-adjust-desk-xxl: 1.8;
	--space-adjust-section: 2.4;
}

/***** END ROOT VARIABLES *****/

/***** BEGIN ELEMENT & CLASS STYLING *****/

/*** 
TEXT SIZING SYSTEM
Nothing here should need to be adjusted.
***/

:is(body, .text-m, .text-l, .text-xl, .text-xxl, h1, h2, h3, h4) {
	font-size: clamp(var(--clamp-min) * 1rem, calc(var(--clamp-min) * 1rem + ((1vw - (var(--vp-min) / 100) * 1rem) * (100 * (var(--clamp-max) - var(--clamp-min)) / (var(--vp-max) - var(--vp-min))))), var(--clamp-max) * 1rem);
}

/*** 
OXYGEN GLOBAL SIZE & SPACING REPLACEMENT
This area replaces most of the global size & spacing related areas in Oxygen.
***/

body {
	--clamp-min: var(--base-text-mobile);
	--clamp-max: var(--base-text-desktop);
}

.ct-section-inner-wrap {
	--pad-min: calc(var(--base-space) * (var(--space-adjust-mob-l) * var(--space-adjust-section)));
	--pad-max: calc(var(--base-space) * (var(--space-adjust-desk-l) * var(--space-adjust-section)));
}


h1 {
	--clamp-min: calc(var(--base-text-mobile) * var(--text-adjust-mob-xxl));
	--clamp-max: calc(var(--base-text-desktop) * var(--text-adjust-desk-xxl));
}
h2 {
	--clamp-min: calc(var(--base-text-mobile) * var(--text-adjust-mob-xl));
	--clamp-max: calc(var(--base-text-desktop) * var(--text-adjust-desk-xl));
}
h3 {
	--clamp-min: calc(var(--base-text-mobile) * var(--text-adjust-mob-l));
	--clamp-max: calc(var(--base-text-desktop) * var(--text-adjust-desk-l));
}
h4 {
	--clamp-min: var(--base-text-mobile);
	--clamp-max: var(--base-text-desktop);
}
h5 {
	font-size: calc(var(--base-text-mobile) * var(--text-adjust-mob-m) * 1rem);
}
h6 {
	font-size: calc(var(--base-text-mobile) - var(--text-adjust-mob-xs) * 1rem);
}

/*** 
TEXT CLASSES
These are generated from the text size system.
***/

.text-xs {
	font-size: calc(var(--base-text-mobile) * 1rem - var(--text-adjust-mob-xs) * 1rem);
}
.text-s {
	font-size: calc(var(--base-text-mobile) * 1rem);
}
.text-m {
	--clamp-min: var(--base-text-mobile);
	--clamp-max: var(--base-text-desktop);
}
.text-l {
	--clamp-min: calc(var(--base-text-mobile) * var(--text-adjust-mob-l));
	--clamp-max: calc(var(--base-text-desktop) * var(--text-adjust-desk-l));
}
.text-xl {
	--clamp-min: calc(var(--base-text-mobile) * var(--text-adjust-mob-xl));
	--clamp-max: calc(var(--base-text-desktop) * var(--text-adjust-desk-xl));
}
.text-xxl {
	--clamp-min: calc(var(--base-text-mobile) * var(--text-adjust-mob-xxl));
	--clamp-max: calc(var(--base-text-desktop) * var(--text-adjust-desk-xxl));
}

/*** 
PADDING UTILITY CLASSES
These apply padding to sections and containers.
***/

:is(.pad--l, .pad--xl, .pad--xxl) {
	padding: clamp(var(--pad-min) * 1rem, calc(var(--pad-min) * 1rem + ((1vw - (var(--vp-min) / 100) * 1rem) * (100 * (var(--pad-max) - var(--pad-min)) / (var(--vp-max) - var(--vp-min))))), var(--pad-max) * 1rem);
}

:is(.ct-section, .pad-section, .pad-section--l, .pad-section--xl, .pad-section--xxl) .ct-section-inner-wrap {
	padding: clamp(var(--pad-min) * 1rem, calc(var(--pad-min) * 1rem + ((1vw - (var(--vp-min) / 100) * 1rem) * (100 * (var(--pad-max) - var(--pad-min)) / (var(--vp-max) - var(--vp-min))))), var(--pad-max) * 1rem) calc(var(--base-space) * 1rem);
}

.pad--xs {
	padding: calc(var(--base-space) * var(--space-adjust-mob-xs) * 1rem);
}
.pad--s {
	padding: calc(var(--base-space) * var(--space-adjust-mob-s) * 1rem);
}
.pad {
	padding: calc(var(--base-space) * var(--space-adjust-mob-m) * 1rem);
}
.pad--l {
	--pad-min: calc(var(--base-space) * var(--space-adjust-mob-l));
	--pad-max: calc(var(--base-space) * var(--space-adjust-desk-l));
}
.pad--xl {
	--pad-min: calc(var(--base-space) * var(--space-adjust-mob-xl));
	--pad-max: calc(var(--base-space) * var(--space-adjust-desk-xl));
}
.pad--xxl {
	--pad-min: calc(var(--base-space) * var(--space-adjust-mob-xxl));
	--pad-max: calc(var(--base-space) * var(--space-adjust-desk-xxl));
}
.pad-section--xs .ct-section-inner-wrap {
	padding: calc(var(--base-space) * var(--space-adjust-mob-xs) * 1rem) calc(var(--base-space) * 1rem);
}
.pad-section--s .ct-section-inner-wrap {
	padding: calc(var(--base-space) * var(--space-adjust-mob-s) * 1rem) calc(var(--base-space) * 1rem);
}
.pad-section .ct-section-inner-wrap {
	--pad-min: calc(var(--base-space) * (var(--space-adjust-mob-l) * var(--space-adjust-section)));
	--pad-max: calc(var(--base-space) * (var(--space-adjust-desk-l) * var(--space-adjust-section)));
}
.pad-section--l {
	--pad-min: calc(var(--base-space) * (var(--space-adjust-mob-l) * var(--space-adjust-section)));
	--pad-max: calc(var(--base-space) * (var(--space-adjust-desk-l) * var(--space-adjust-section)));
}
.pad-section--xl {
	--pad-min: calc(var(--base-space) * (var(--space-adjust-mob-xl) * var(--space-adjust-section)));
	--pad-max: calc(var(--base-space) * (var(--space-adjust-desk-xl) * var(--space-adjust-section)));
}
.pad-section--xxl {
	--pad-min: calc(var(--base-space) * (var(--space-adjust-mob-xxl) * var(--space-adjust-section)));
	--pad-max: calc(var(--base-space) * (var(--space-adjust-desk-xxl) * var(--space-adjust-section)));
}

/*** 
MARGIN UTILITY CLASSES
These apply margin to elements.
***/

:is(.margin-bottom-l, .margin-bottom-xl, .margin-bottom-xxl) {
	margin-bottom: clamp(var(--margin-min) * 1rem, calc(var(--margin-min) * 1rem + ((1vw - (var(--vp-min) / 100) * 1rem) * (100 * (var(--margin-max) - var(--margin-min)) / (var(--vp-max) - var(--vp-min))))), var(--margin-max) * 1rem);
}
.margin-bottom--xs {
	margin-bottom: calc(var(--base-space) * var(--space-adjust-mob-xs) * 1rem);
}
.margin-bottom--s {
	margin-bottom: calc(var(--base-space) * var(--space-adjust-mob-s) * 1rem);
}
.margin-bottom {
	margin-bottom: calc(var(--base-space) * var(--space-adjust-mob-m) * 1rem);
}
.margin-bottom--l {
	--margin-min: calc(var(--base-space) * var(--space-adjust-mob-l));
	--margin-max: calc(var(--base-space) * var(--space-adjust-desk-l));
}
.margin-bottom--xl {
	--margin-min: calc(var(--base-space) * var(--space-adjust-mob-xl));
	--margin-max: calc(var(--base-space) * var(--space-adjust-desk-xl));
}
.margin-bottom--xxl {
	--margin-min: calc(var(--base-space) * var(--space-adjust-mob-xxl));
	--margin-max: calc(var(--base-space) * var(--space-adjust-desk-xxl));
}

/* 
OWL SPACING UTILITY CLASSES 
These apply equal margin to the top of all elements with an adjacent sibling.
Use these to automatically space everything in a section or container without creating extra top or bottom spacing.
*/

.ct-section.owl--xs .ct-section-inner-wrap > * + *,
.owl--xs:not(.ct-section) > * + * {
	margin-top: calc(var(--base-space) * var(--space-adjust-mob-xs) * 1rem);
}

.ct-section.owl--s .ct-section-inner-wrap > * + *,
.owl--s:not(.ct-section) > * + * {
	margin-top: calc(var(--base-space) * var(--space-adjust-mob-s) * 1rem);
}

.ct-section.owl .ct-section-inner-wrap > * + *,
.owl:not(.ct-section) > * + * {
	margin-top: calc(var(--base-space) * 1rem);
}

.ct-section.owl--l .ct-section-inner-wrap > * + *,
.owl--l:not(.ct-section) > * + * {
	--margin-min: calc(var(--base-space) * var(--space-adjust-mob-l));
	--margin-max: calc(var(--base-space) * var(--space-adjust-desk-l));
	margin-top: clamp(var(--margin-min) * 1rem, calc(var(--margin-min) * 1rem + ((1vw - (var(--vp-min) / 100) * 1rem) * (100 * (var(--margin-max) - var(--margin-min)) / (var(--vp-max) - var(--vp-min))))), var(--margin-max) * 1rem);
}

.ct-section.owl--xl .ct-section-inner-wrap > * + *,
.owl--xl:not(.ct-section) > * + * {
	--margin-min: calc(var(--base-space) * var(--space-adjust-mob-xl));
	--margin-max: calc(var(--base-space) * var(--space-adjust-desk-xl));
	margin-top: clamp(var(--margin-min) * 1rem, calc(var(--margin-min) * 1rem + ((1vw - (var(--vp-min) / 100) * 1rem) * (100 * (var(--margin-max) - var(--margin-min)) / (var(--vp-max) - var(--vp-min))))), var(--margin-max) * 1rem);
}

.ct-section.owl--xxl .ct-section-inner-wrap > * + *,
.owl--xxl:not(.ct-section) > * + * {
	--margin-min: calc(var(--base-space) * var(--space-adjust-mob-xxl));
	--margin-max: calc(var(--base-space) * var(--space-adjust-desk-xxl));
	margin-top: clamp(var(--margin-min) * 1rem, calc(var(--margin-min) * 1rem + ((1vw - (var(--vp-min) / 100) * 1rem) * (100 * (var(--margin-max) - var(--margin-min)) / (var(--vp-max) - var(--vp-min))))), var(--margin-max) * 1rem);
}

/* 
MAX WIDTH UTILITY CLASSES
Change the max-width of any element. Values are generated from base viewport sizes so they adapt to viewport defaults.
*/

.max-width--s {
	width: 100%;
	max-width: calc(var(--vp-min) * 1rem);
}
.max-width--m {
	width: 100%;
 	max-width: calc(var(--vp-max) * .4 * 1rem);
}
.max-width--l {
	width: 100%;
 	max-width: calc(var(--vp-max) * .6 * 1rem);
}
.max-width--xl {
	width: 100%;
 	max-width: calc(var(--vp-max) * .8 * 1rem);
}
.max-width--xxl {
	width: 100%;
 	max-width: calc(var(--vp-max) * .9 * 1rem);
}
.max-width--full {
  	width: 100%;
  	max-width: calc(var(--vp-max) * 1rem);
}

/* BREAKOUT UTILITY CLASSES */

.breakout--s {
	width: 60vw;
	max-width: 60vw;
	margin: 0 calc(-30vw + 50%);
}
.breakout {
	width: 70vw;
	max-width: 70vw;
	margin: 0 calc(-35vw + 50%);
}
.breakout--l {
	width: 80vw;
	max-width: 80vw;
	margin: 0 calc(-40vw + 50%);
}
.breakout--xl {
	width: 90vw;
	max-width: 90vw;
	margin: 0 calc(-45vw + 50%);
}
.breakout--full {
	width: 100vw;
	max-width: 100vw;
	margin: 0 calc(-50vw + 50%);
}
@media (max-width: var(--vp-max)) {
	[class*="breakout--"] {
		width: 100%;
		max-width: 100%;
		margin: 0;
	}
}

/* STICKY UTILITY CLASSES */

.sticky {
	position: sticky;
	top: 0;
}
.sticky-top--s {
	top: 2.5%;
}
.sticky-top {
	top: 5%;
}
.sticky-top--l {
	top: 10%;
}

/* HEIGHT UTILITY CLASSES */

.ct-section.height--30 .ct-section-inner-wrap,
.height--30:not(.ct-section) {
	min-height: 30vh;
}
.ct-section.height--40 .ct-section-inner-wrap,
.height--40:not(.ct-section) {
	min-height: 40vh;
}
.ct-section.height--50 .ct-section-inner-wrap,
.height--50:not(.ct-section) {
	min-height: 50vh;
}
.ct-section.height--60 .ct-section-inner-wrap,
.height--60:not(.ct-section) {
	min-height: 60vh;
}
.ct-section.height--70 .ct-section-inner-wrap,
.height--70:not(.ct-section) {
	min-height: 70vh;
}
.ct-section.height--80 .ct-section-inner-wrap,
.height--80:not(.ct-section) {
	min-height: 80vh;
}
.ct-section.height--90 .ct-section-inner-wrap,
.height--90:not(.ct-section) {
	min-height: 90vh;
}
.ct-section.height--full .ct-section-inner-wrap,
.height--full:not(.ct-section) {
	min-height: 100vh;
}

/*** 
OBJECT-FIT UTILITY CLASSES
Use these classes when images require a set width and height.
They prevent image stretching and allow control over which area of the image is shown.
***/

.object-fit--cover {
	object-fit: cover;
}
.object-fit--center-left {
	object-position: 10% 50%;
}
.object-fit--center-right {
	object-position: 90% 50%;
}
.object-fit--center-top {
	object-position: 50% 10%;
}
.object-fit--center-bottom {
	object-position: 50% 90%;
}
.object-fit--bottom-left {
	object-position: 10% 10%;
}
.object-fit--bottom-right {
	object-position: 90% 90%;
}
.object-fit--top-left {
	object-position: 10% 90%;
}
.object-fit--top-right {
	object-position: 90% 10%;
}
.object-fit--contain {
	object-fit: contain;
}

/***** END UTILITY CLASSES *****/
